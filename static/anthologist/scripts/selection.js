// Generated by CoffeeScript 1.6.1
(function() {
  var accordion;

  accordion = {
    mothers: [],
    go: function(options) {
      var $m, _i, _len, _ref, _results;
      $.extend(this, options);
      this.getMothers();
      _ref = this.mothers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        $m = _ref[_i];
        _results.push(this.add($m));
      }
      return _results;
    },
    getMothers: function() {
      var app;
      app = this;
      return $(".accMother").each(function() {
        return app.mothers.push($(this));
      });
    },
    add: function($m) {
      var $items, app, id, triggers;
      app = this;
      id = $m.attr("id");
      $items = $m.find(".accItem");
      $items.data("mother", id);
      triggers = $m.find(".accTrigger");
      return triggers.click(function() {
        return app.change($(this), $items, $m);
      });
    },
    changeState: function(action, $obj) {
      if (action === "show") {
        if ($obj.hasClass("u-inactive")) {
          return $obj.removeClass("u-inactive").addClass("u-active");
        }
      } else if (action === "hide") {
        if ($obj.hasClass("u-active")) {
          return $obj.removeClass("u-active").addClass("u-inactive");
        }
      }
    },
    change: function($trigger, $items, $mother) {
      var $otherItems, $thisItem, app;
      app = this;
      $thisItem = $items.has($trigger);
      $otherItems = $items.not($thisItem);
      /*
      If thisItem is inactive, make it active;
      and if the accordion is marked oneAtATime = true,
      hide any other open accordion-items.
      If the accordion is marked closeAll = true
      and thisItem is active, make it inactive.
      */

      if ($thisItem.hasClass("u-inactive")) {
        app.changeState("show", $thisItem);
        if (app.oneAtATime) {
          $otherItems.each(function() {
            return app.changeState("hide", $(this));
          });
        }
      } else if ($thisItem.hasClass("u-active") && app.closeAll) {
        app.changeState("hide", $thisItem);
      }
      if (accordion.style) {
        return accordion.style($trigger, $items, $mother);
      }
    }
  };

  $(function() {
    accordion.style = function($trigger, $items, $mother) {
      var $triggers, isOpen;
      $triggers = $mother.find(".accTrigger");
      isOpen = false;
      $items.each(function() {
        if ($(this).hasClass("u-active")) {
          return isOpen = true;
        }
      });
      if (isOpen) {
        return $triggers.addClass("u-wide");
      } else {
        return $triggers.removeClass("u-wide");
      }
    };
    return accordion.go({
      oneAtATime: false,
      closeAll: true
    });
  });

}).call(this);
