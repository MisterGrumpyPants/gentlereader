/* MIX-INS */

.border-radius(@value) {
  -webkit-border-radius: @value;
  -moz-border-radius: @value;
  border-radius: @value;
}

.box-shadow(@value) {
  -webkit-box-shadow: @value;
  -moz-box-shadow: @value;
  box-shadow: @value;
}

.font-line(@fontSize, @lineSize:auto) {
  font-size: ~"@{fontSize}px";
  line-height: ~"@{lineSize}px";
}

.letter-spacing (@sizeValue) {
  @remValue: @sizeValue;
  @pxValue: (@sizeValue * 10);
  letter-spacing: ~"@{pxValue}px";
  letter-spacing: ~"@{remValue}rem";
}

.size(@x, @y) {
  height: @x;
  width: @y;
}

.absolute(@top:auto, @right:auto, @bottom:auto, @left:auto, @z-index:auto) {
  position: absolute;
  top: @top;
  right: @right;
  bottom: @bottom;
  left: @left;
  z-index: @z-index;
}

.hr(@width:50%, @height:1px, @color:black) {
  background: @color;
  content: "";
  display: block;
  height: @height;
  margin: 0 auto;
  max-width: @width;
}

// inline-list will only work with <ul>s
.inline-list(@divider) {
  display: inline;
  & > li {
    display: inline-block;
    &:not(:last-child):after {
      content: "@{divider}";
    }
  }
}

.arrow-down(@size, @color:black) {
  display: inline-block;
	width: 0; 
	height: ceil(@size / 2); 
	border-left: ~"@{size}px" solid transparent;
	border-right: ~"@{size}px" solid transparent;
	border-top: ~"@{size}px" solid @color;
}

.two-borders(@axis, @border:1px solid black) when (@axis=x) {
  border-bottom: @border;
  border-top: @border;
}
.two-borders(@axis, @border:1px solid black) when (@axis=y) {
  border-left: @border;
  border-right: @border;
}

.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}